name: Kotlin Multiplatform App CI/CD

on:
  push:
    branches: [ main ]
    paths-ignore: [ "**/*.md", "**/*.yml" ]
  pull_request:
    branches: [ main ]

env:
  GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx4096m -XX:+HeapDumpOnOutOfMemoryError"
  APP_NAME: "Klyx"
  APP_VERSION: ${{ github.ref_type == 'tag' && github.ref_name || 'dev' }}

jobs:
  build-android-app:
    name: Build Android App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - run: echo "${{ secrets.KLYX_KEYSTORE }}" | base64 -d > /tmp/klyx.keystore
      - run: echo "${{ secrets.KEYSTORE_PROP }}" | base64 -d > /tmp/sign.properties
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: chmod +x gradlew
      - name: Build Android APK
        run: |
          if ./gradlew tasks --all | grep -q "assembleRelease"; then
            ./gradlew assembleRelease
          else
            echo "Skipping Android build, task not available"
          fi
      - name: Move APK to root
        run: |
          mkdir -p klyx
          find . -path "*/build/outputs/apk/*/*.apk" -exec cp {} klyx/ \; 2>/dev/null || true

      - uses: actions/upload-artifact@v4
        if: hashFiles('klyx/*.apk') != ''
        with:
          name: klyx-android
          path: 'klyx/*.apk'
          retention-days: 30

  build-desktop-jvm:
    name: Build Desktop JVM App
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: chmod +x gradlew
      - name: Build JVM App
        run: |
          if ./gradlew tasks --all | grep -q "packageDistributionForCurrentOS"; then
            ./gradlew packageDistributionForCurrentOS shadowJar
          else
            echo "Skipping JVM build, task not available"
          fi

      - name: Upload JVM artifacts
        run: |
          find . -path "*/build/compose/binaries/main/*/*" -type f 2>/dev/null | while read -r file; do
            if [[ -f "$file" ]]; then
              echo "Found distribution file: $file"
              filename=$(basename "$file")
              echo "Uploading $filename"
            fi
          done
          
          find . -path "*/build/libs/*-all.jar" -type f 2>/dev/null | while read -r file; do
            if [[ -f "$file" ]]; then
              echo "Found JAR file: $file"
              filename=$(basename "$file")
              echo "Uploading $filename"
            fi
          done

      - name: Upload distribution artifacts
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/compose/binaries/main/*/*') != ''
        with:
          name: klyx-desktop-distribution
          path: '**/build/compose/binaries/main/*/*'
          retention-days: 30

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/libs/*-all.jar') != ''
        with:
          name: klyx-desktop-jar
          path: '**/build/libs/*-all.jar'
          retention-days: 30

  build-linux-native:
    name: Build Linux Native
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - run: sudo apt-get update && sudo apt-get install -y rpm alien dpkg-dev
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: chmod +x gradlew
      - name: Build Linux binaries
        run: |
          if ./gradlew tasks --all | grep -q "packageDeb"; then
            ./gradlew packageDeb
          else
            echo "Skipping packageDeb, task not available"
          fi
          
          if ./gradlew tasks --all | grep -q "packageRpm"; then
            ./gradlew packageRpm
          else
            echo "Skipping packageRpm, task not available"
          fi

      - name: Upload DEB packages
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/compose/binaries/main/deb/*.deb') != ''
        with:
          name: klyx-linux-deb
          path: '**/build/compose/binaries/main/deb/*.deb'
          retention-days: 30

      - name: Upload RPM packages
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/compose/binaries/main/rpm/*.rpm') != ''
        with:
          name: klyx-linux-rpm
          path: '**/build/compose/binaries/main/rpm/*.rpm'
          retention-days: 30

  build-windows-native:
    name: Build Windows Native App & Installer
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build Windows native binary
        run: |
          if (./gradlew tasks --all | Select-String "packageMsi") {
            ./gradlew packageMsi
          } else {
            echo "Skipping Windows native build, task not available"
          }

      - name: Upload MSI installers
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/compose/binaries/main/msi/*.msi') != ''
        with:
          name: klyx-windows-msi
          path: '**/build/compose/binaries/main/msi/*.msi'
          retention-days: 30

  build-macos-native:
    name: Build macOS Native App & DMG
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: chmod +x gradlew

      - name: Package macOS app bundles
        run: |
          if ./gradlew tasks --all | grep -q "packageDmg"; then
            ./gradlew packageDmg
          else
            echo "Skipping packageDmg"
          fi

      - name: Create universal binary
        run: |
          mkdir -p build/universal
          if [ -f "build/bin/macosX64/releaseExecutable/klyx.kexe" ] && [ -f "build/bin/macosArm64/releaseExecutable/klyx.kexe" ]; then
            lipo -create \
              "build/bin/macosX64/releaseExecutable/klyx.kexe" \
              "build/bin/macosArm64/releaseExecutable/klyx.kexe" \
              -output "build/universal/klyx"
          else
            echo "Skipping universal binary (missing arch builds)"
          fi

      - name: Upload DMG files
        uses: actions/upload-artifact@v4
        if: hashFiles('**/build/compose/binaries/main/dmg/*.dmg') != ''
        with:
          name: klyx-macos-dmg
          path: '**/build/compose/binaries/main/dmg/*.dmg'
          retention-days: 30

      - name: Upload x64 executables
        uses: actions/upload-artifact@v4
        if: hashFiles('build/bin/macosX64/releaseExecutable/*') != ''
        with:
          name: klyx-macos-x64
          path: build/bin/macosX64/releaseExecutable/*
          retention-days: 30

      - name: Upload ARM64 executables
        uses: actions/upload-artifact@v4
        if: hashFiles('build/bin/macosArm64/releaseExecutable/*') != ''
        with:
          name: klyx-macos-arm64
          path: build/bin/macosArm64/releaseExecutable/*
          retention-days: 30

      - name: Upload universal binary
        uses: actions/upload-artifact@v4
        if: hashFiles('build/universal/*') != ''
        with:
          name: klyx-macos-universal
          path: build/universal/*
          retention-days: 30

  build-ios-app:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - run: chmod +x gradlew

      - name: Build iOS app
        run: |
          if ./gradlew tasks --all | grep -q "iosSimulatorArm64MainBinaries"; then
            ./gradlew iosSimulatorArm64MainBinaries
          else
            echo "Skipping iOS build"
          fi

      - name: Upload iOS simulator artifacts
        uses: actions/upload-artifact@v4
        if: hashFiles('build/bin/iosSimulatorArm64/releaseExecutable/*') != ''
        with:
          name: klyx-ios-simulator
          path: build/bin/iosSimulatorArm64/releaseExecutable/*
          retention-days: 30

  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Detekt
        run: ./gradlew detektAll

      - name: Upload code quality results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: quality-reports
          path: |
            **/build/reports/detekt/
          retention-days: 7